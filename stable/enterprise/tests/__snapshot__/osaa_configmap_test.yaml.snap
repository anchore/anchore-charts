should render the configmaps for osaa migration if enabled:
  1: |
    apiVersion: v1
    data:
      config.yaml: |
        # Anchore Service Configuration File, mounted from a configmap
        #
        service_dir: ${ANCHORE_SERVICE_DIR}
        tmp_dir: ${ANCHORE_TMP_DIR}
        log_level: ${ANCHORE_LOG_LEVEL} # Deprecated - prefer use of logging.log_level

        logging:
          colored_logging: false
          exception_backtrace_logging: false
          exception_diagnose_logging: false
          file_retention_rule: 10
          file_rotation_rule: 10 MB
          log_level: <ALLOW_API_CONFIGURATION>
          server_access_logging: true
          server_log_level: info
          server_response_debug_logging: false
          structured_logging: false

        server:
          max_connection_backlog: 2048
          max_wsgi_middleware_worker_count: 50
          max_wsgi_middleware_worker_queue_size: 100
          timeout_graceful_shutdown: false
          timeout_keep_alive: 5

        allow_awsecr_iam_auto: ${ANCHORE_ALLOW_ECR_IAM_AUTO}
        host_id: "${ANCHORE_HOST_ID}"
        internal_ssl_verify: ${ANCHORE_INTERNAL_SSL_VERIFY}
        image_analyze_timeout_seconds: ${ANCHORE_IMAGE_ANALYZE_TIMEOUT_SECONDS}

        global_client_connect_timeout: ${ANCHORE_GLOBAL_CLIENT_CONNECT_TIMEOUT}
        global_client_read_timeout: ${ANCHORE_GLOBAL_CLIENT_READ_TIMEOUT}
        server_request_timeout_seconds: ${ANCHORE_GLOBAL_SERVER_REQUEST_TIMEOUT_SEC}

        license_file: ${ANCHORE_LICENSE_FILE}
        auto_restart_services: false

        max_source_import_size_mb: ${ANCHORE_MAX_IMPORT_SOURCE_SIZE_MB}
        max_import_content_size_mb: ${ANCHORE_MAX_IMPORT_CONTENT_SIZE_MB}

        max_compressed_image_size_mb: ${ANCHORE_MAX_COMPRESSED_IMAGE_SIZE_MB}

        audit:
          enabled: true
          mode: log
          verbs:
            - post
            - put
            - delete
            - patch
          resource_uris:
            - "/accounts"
            - "/accounts/{account_name}"
            - "/accounts/{account_name}/state"
            - "/accounts/{account_name}/users"
            - "/accounts/{account_name}/users/{username}"
            - "/accounts/{account_name}/users/{username}/api-keys"
            - "/accounts/{account_name}/users/{username}/api-keys/{key_name}"
            - "/accounts/{account_name}/users/{username}/credentials"
            - "/rbac-manager/roles"
            - "/rbac-manager/roles/{role_name}/members"
            - "/rbac-manager/saml/idps"
            - "/rbac-manager/saml/idps/{name}"
            - "/rbac-manager/saml/idps/{name}/user-group-mappings"
            - "/system/user-groups"
            - "/system/user-groups/{group_uuid}"
            - "/system/user-groups/{group_uuid}/roles"
            - "/system/user-groups/{group_uuid}/users"
            - "/user/api-keys"
            - "/user/api-keys/{key_name}"
            - "/user/credentials"

        metrics:
          enabled: ${ANCHORE_ENABLE_METRICS}
          auth_disabled: ${ANCHORE_DISABLE_METRICS_AUTH}

        webhooks:
          {}

        default_admin_password: "${ANCHORE_ADMIN_PASSWORD}"
        default_admin_email: ${ANCHORE_ADMIN_EMAIL}

        configuration:
          api_driven_configuration_enabled: ${ANCHORE_API_DRIVEN_CONFIGURATION_ENABLED}

        keys:
          secret: "${ANCHORE_SAML_SECRET}"
          public_key_path: ${ANCHORE_AUTH_PRIVKEY}
          private_key_path: ${ANCHORE_AUTH_PUBKEY}

        user_authentication:
          oauth:
            enabled: ${ANCHORE_OAUTH_ENABLED}
            default_token_expiration_seconds: ${ANCHORE_OAUTH_TOKEN_EXPIRATION}
            refresh_token_expiration_seconds: ${ANCHORE_OAUTH_REFRESH_TOKEN_EXPIRATION}
          hashed_passwords: ${ANCHORE_AUTH_ENABLE_HASHED_PASSWORDS}
          sso_require_existing_users: ${ANCHORE_SSO_REQUIRES_EXISTING_USERS}
          allow_api_keys_for_saml_users: false
          max_api_key_age_days: 365
          max_api_keys_per_user: 100
          remove_deleted_user_api_keys_older_than_days: 365
          disallow_native_users: false
          log_saml_assertions: false
        credentials:
          database:
            user: "${ANCHORE_DB_USER}"
            password: "${ANCHORE_DB_PASSWORD}"
            host: "${ANCHORE_DB_HOST}"
            port: "${ANCHORE_DB_PORT}"
            name: "${ANCHORE_DB_NAME}"
            db_connect_args:
              timeout: ${ANCHORE_DB_TIMEOUT}
              ssl: ${ANCHORE_DB_SSL}
            db_pool_size: ${ANCHORE_DB_POOL_SIZE}
            db_pool_max_overflow: ${ANCHORE_DB_POOL_MAX_OVERFLOW}

        account_gc:
          max_resource_gc_chunk: 4096
          max_deletion_threads: 4

        services:
          apiext:
            enabled: true
            image_content:
              remove_license_content_from_sbom_return: <ALLOW_API_CONFIGURATION>
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          analyzer:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            cycle_timer_seconds: 1
            cycle_timers:
              image_analyzer: 1
            analyzer_driver: 'nodocker'
            layer_cache_enable: ${ANCHORE_LAYER_CACHE_ENABLED}
            layer_cache_max_gigabytes: ${ANCHORE_LAYER_CACHE_SIZE_GB}
            enable_hints: ${ANCHORE_HINTS_ENABLED}
            enable_owned_package_filtering: ${ANCHORE_OWNED_PACKAGE_FILTERING_ENABLED}
            keep_image_analysis_tmpfiles: ${ANCHORE_KEEP_IMAGE_ANALYSIS_TMPFILES}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          catalog:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            account_prometheus_metrics: <ALLOW_API_CONFIGURATION>
            cycle_timer_seconds: 1
            cycle_timers:
              analyzer_queue: 1
              archive_tasks: 43200
              artifact_lifecycle_policy_tasks: 43200
              events_gc: 43200
              image_gc: 60
              image_watcher: 3600
              k8s_image_watcher: 150
              notifications: 30
              policy_bundle_sync: 300
              policy_eval: 3600
              repo_watcher: 60
              resource_metrics: 60
              service_watcher: 15
              vulnerability_scan: 14400
            event_log:
              max_retention_age_days: 180
              notification:
                enabled: false
                level:
                - error
            runtime_inventory:
              inventory_ttl_days: ${ANCHORE_ENTERPRISE_RUNTIME_INVENTORY_TTL_DAYS}
              inventory_ingest_overwrite: ${ANCHORE_ENTERPRISE_RUNTIME_INVENTORY_INGEST_OVERWRITE}
            integrations:
              integration_health_report_ttl_days: ${ANCHORE_ENTERPRISE_INTEGRATION_HEALTH_REPORTS_TTL_DAYS}
            image_gc:
              max_worker_threads: ${ANCHORE_CATALOG_IMAGE_GC_WORKERS}
            runtime_compliance:
              object_store_bucket: "runtime_compliance_check"
            import_operation_expiration_days: ${ANCHORE_IMPORT_OPERATION_EXPIRATION_DAYS}
            analysis_queue_priority: <ALLOW_API_CONFIGURATION>
            sbom_vuln_scan:
              auto_scale: true
              batch_size: 1
              pool_size: 1
            analysis_archive:
              {}
            object_store:
              compression:
                enabled: true
                min_size_kbytes: 100
              storage_driver:
                config: {}
                name: db
              verify_content_digests: true
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          simplequeue:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          policy_engine:
            enabled: true
            require_auth: true
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            policy_evaluation_cache_ttl: ${ANCHORE_POLICY_EVAL_CACHE_TTL_SECONDS}
            enable_package_db_load: ${ANCHORE_POLICY_ENGINE_ENABLE_PACKAGE_DB_LOAD}
            enable_user_base_image: true
            vulnerabilities:
              sync:
                enabled: true
                ssl_verify: ${ANCHORE_FEEDS_SSL_VERIFY}
                connection_timeout_seconds: 3
                read_timeout_seconds: 60
                data:
                  grypedb:
                    enabled: true
              matching:
                exclude:
                  providers: []
                  package_types: []
                default:
                  search:
                    by_cpe:
                      enabled: ${ANCHORE_VULN_MATCHING_DEFAULT_SEARCH_BY_CPE_ENABLED}
                ecosystem_specific:
                  dotnet:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_DOTNET_SEARCH_BY_CPE_ENABLED}
                  golang:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_GOLANG_SEARCH_BY_CPE_ENABLED}
                  java:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_JAVA_SEARCH_BY_CPE_ENABLED}
                  javascript:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_JAVASCRIPT_SEARCH_BY_CPE_ENABLED}
                  python:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_PYTHON_SEARCH_BY_CPE_ENABLED}
                  ruby:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_RUBY_SEARCH_BY_CPE_ENABLED}
                  stock:
                    search:
                      by_cpe:
                        # Disabling search by CPE for the stock matcher will entirely disable binary-only matches and is not advised
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_STOCK_SEARCH_BY_CPE_ENABLED}
            server: {}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          reports:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            enable_graphiql: ${ANCHORE_ENTERPRISE_REPORTS_ENABLE_GRAPHIQL}
            cycle_timers:
              reports_scheduled_queries: 600
            max_async_execution_threads: ${ANCHORE_ENTERPRISE_REPORTS_MAX_ASYNC_EXECUTION_THREADS}
            async_execution_timeout: ${ANCHORE_ENTERPRISE_REPORTS_ASYNC_EXECUTION_TIMEOUT}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}
            use_volume: false

          reports_worker:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            enable_data_ingress: ${ANCHORE_ENTERPRISE_REPORTS_ENABLE_DATA_INGRESS}
            enable_data_egress: ${ANCHORE_ENTERPRISE_REPORTS_ENABLE_DATA_EGRESS}
            data_egress_window: ${ANCHORE_ENTERPRISE_REPORTS_DATA_EGRESS_WINDOW}
            data_refresh_max_workers: ${ANCHORE_ENTERPRISE_REPORTS_DATA_REFRESH_MAX_WORKERS}
            data_load_max_workers: ${ANCHORE_ENTERPRISE_REPORTS_DATA_LOAD_MAX_WORKERS}
            ingress_images_max_workers: 10
            cycle_timers:
              reports_extended_runtime_vuln_load: 1800
              reports_image_egress: 600
              reports_image_load: 600
              reports_image_refresh: 7200
              reports_metrics: 3600
              reports_runtime_inventory_load: 600
              reports_tag_egress: 600
              reports_tag_load: 600
              reports_tag_refresh: 7200
            runtime_report_generation:
              use_legacy_loaders_and_queries: false
              inventory_images_by_vulnerability: true
              vulnerabilities_by_k8s_namespace: ${ANCHORE_ENTERPRISE_REPORTS_VULNERABILITIES_BY_K8S_NAMESPACE}
              vulnerabilities_by_k8s_container: ${ANCHORE_ENTERPRISE_REPORTS_VULNERABILITIES_BY_K8S_CONTAINER}
              vulnerabilities_by_ecs_container: ${ANCHORE_ENTERPRISE_REPORTS_VULNERABILITIES_BY_ECS_CONTAINER}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          notifications:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            cycle_timers:
              notifications: 30
            ui_url: ${ANCHORE_ENTERPRISE_UI_URL}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          data_syncer:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: 0.0.0.0
            port: ${ANCHORE_PORT}
            auto_sync_enabled: ${ANCHORE_DATA_SYNC_AUTO_SYNC_ENABLED}
            upload_dir: /analysis_scratch
            datasets:
              vulnerability_db:
                versions: ["5"]
              clamav_db:
                versions: ["1"]
              kev_db:
                versions: ["1"]
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}
    kind: ConfigMap
    metadata:
      annotations:
        bar: baz
        foo: bar
      labels:
        app.kubernetes.io/instance: test-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-release-enterprise
        app.kubernetes.io/part-of: anchore
        app.kubernetes.io/version: 9.9.9
        bar: baz
        foo: bar
        helm.sh/chart: enterprise-9.9.9
      name: test-release-enterprise
      namespace: test-namespace
  2: |
    apiVersion: v1
    data:
      config.yaml: |
        # Anchore Object Store and Analysis Archive Migration configuration file, mounted from a configmap
        #
        service_dir: ${ANCHORE_SERVICE_DIR}
        tmp_dir: ${ANCHORE_TMP_DIR}
        log_level: ${ANCHORE_LOG_LEVEL} # Deprecated - prefer use of logging.log_level

        logging:
          colored_logging: false
          exception_backtrace_logging: false
          exception_diagnose_logging: false
          file_retention_rule: 10
          file_rotation_rule: 10 MB
          log_level: <ALLOW_API_CONFIGURATION>
          server_access_logging: true
          server_log_level: info
          server_response_debug_logging: false
          structured_logging: false

        server:
          max_connection_backlog: 2048
          max_wsgi_middleware_worker_count: 50
          max_wsgi_middleware_worker_queue_size: 100
          timeout_graceful_shutdown: false
          timeout_keep_alive: 5

        allow_awsecr_iam_auto: ${ANCHORE_ALLOW_ECR_IAM_AUTO}
        host_id: "${ANCHORE_HOST_ID}"
        internal_ssl_verify: ${ANCHORE_INTERNAL_SSL_VERIFY}
        image_analyze_timeout_seconds: ${ANCHORE_IMAGE_ANALYZE_TIMEOUT_SECONDS}

        global_client_connect_timeout: ${ANCHORE_GLOBAL_CLIENT_CONNECT_TIMEOUT}
        global_client_read_timeout: ${ANCHORE_GLOBAL_CLIENT_READ_TIMEOUT}
        server_request_timeout_seconds: ${ANCHORE_GLOBAL_SERVER_REQUEST_TIMEOUT_SEC}

        license_file: ${ANCHORE_LICENSE_FILE}
        auto_restart_services: false

        max_source_import_size_mb: ${ANCHORE_MAX_IMPORT_SOURCE_SIZE_MB}
        max_import_content_size_mb: ${ANCHORE_MAX_IMPORT_CONTENT_SIZE_MB}

        max_compressed_image_size_mb: ${ANCHORE_MAX_COMPRESSED_IMAGE_SIZE_MB}

        audit:
          enabled: true
          mode: log
          verbs:
            - post
            - put
            - delete
            - patch
          resource_uris:
            - "/accounts"
            - "/accounts/{account_name}"
            - "/accounts/{account_name}/state"
            - "/accounts/{account_name}/users"
            - "/accounts/{account_name}/users/{username}"
            - "/accounts/{account_name}/users/{username}/api-keys"
            - "/accounts/{account_name}/users/{username}/api-keys/{key_name}"
            - "/accounts/{account_name}/users/{username}/credentials"
            - "/rbac-manager/roles"
            - "/rbac-manager/roles/{role_name}/members"
            - "/rbac-manager/saml/idps"
            - "/rbac-manager/saml/idps/{name}"
            - "/rbac-manager/saml/idps/{name}/user-group-mappings"
            - "/system/user-groups"
            - "/system/user-groups/{group_uuid}"
            - "/system/user-groups/{group_uuid}/roles"
            - "/system/user-groups/{group_uuid}/users"
            - "/user/api-keys"
            - "/user/api-keys/{key_name}"
            - "/user/credentials"

        metrics:
          enabled: ${ANCHORE_ENABLE_METRICS}
          auth_disabled: ${ANCHORE_DISABLE_METRICS_AUTH}

        webhooks:
          {}

        default_admin_password: "${ANCHORE_ADMIN_PASSWORD}"
        default_admin_email: ${ANCHORE_ADMIN_EMAIL}

        configuration:
          api_driven_configuration_enabled: ${ANCHORE_API_DRIVEN_CONFIGURATION_ENABLED}

        keys:
          secret: "${ANCHORE_SAML_SECRET}"
          public_key_path: ${ANCHORE_AUTH_PRIVKEY}
          private_key_path: ${ANCHORE_AUTH_PUBKEY}

        user_authentication:
          oauth:
            enabled: ${ANCHORE_OAUTH_ENABLED}
            default_token_expiration_seconds: ${ANCHORE_OAUTH_TOKEN_EXPIRATION}
            refresh_token_expiration_seconds: ${ANCHORE_OAUTH_REFRESH_TOKEN_EXPIRATION}
          hashed_passwords: ${ANCHORE_AUTH_ENABLE_HASHED_PASSWORDS}
          sso_require_existing_users: ${ANCHORE_SSO_REQUIRES_EXISTING_USERS}
          allow_api_keys_for_saml_users: false
          max_api_key_age_days: 365
          max_api_keys_per_user: 100
          remove_deleted_user_api_keys_older_than_days: 365
          disallow_native_users: false
          log_saml_assertions: false
        credentials:
          database:
            user: "${ANCHORE_DB_USER}"
            password: "${ANCHORE_DB_PASSWORD}"
            host: "${ANCHORE_DB_HOST}"
            port: "${ANCHORE_DB_PORT}"
            name: "${ANCHORE_DB_NAME}"
            db_connect_args:
              timeout: ${ANCHORE_DB_TIMEOUT}
              ssl: ${ANCHORE_DB_SSL}
            db_pool_size: ${ANCHORE_DB_POOL_SIZE}
            db_pool_max_overflow: ${ANCHORE_DB_POOL_MAX_OVERFLOW}

        account_gc:
          max_resource_gc_chunk: 4096
          max_deletion_threads: 4

        services:
          apiext:
            enabled: true
            image_content:
              remove_license_content_from_sbom_return: <ALLOW_API_CONFIGURATION>
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          analyzer:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            cycle_timer_seconds: 1
            cycle_timers:
              image_analyzer: 1
            analyzer_driver: 'nodocker'
            layer_cache_enable: ${ANCHORE_LAYER_CACHE_ENABLED}
            layer_cache_max_gigabytes: ${ANCHORE_LAYER_CACHE_SIZE_GB}
            enable_hints: ${ANCHORE_HINTS_ENABLED}
            enable_owned_package_filtering: ${ANCHORE_OWNED_PACKAGE_FILTERING_ENABLED}
            keep_image_analysis_tmpfiles: ${ANCHORE_KEEP_IMAGE_ANALYSIS_TMPFILES}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          catalog:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            account_prometheus_metrics: <ALLOW_API_CONFIGURATION>
            cycle_timer_seconds: 1
            cycle_timers:
              analyzer_queue: 1
              archive_tasks: 43200
              artifact_lifecycle_policy_tasks: 43200
              events_gc: 43200
              image_gc: 60
              image_watcher: 3600
              k8s_image_watcher: 150
              notifications: 30
              policy_bundle_sync: 300
              policy_eval: 3600
              repo_watcher: 60
              resource_metrics: 60
              service_watcher: 15
              vulnerability_scan: 14400
            event_log:
              max_retention_age_days: 180
              notification:
                enabled: false
                level:
                - error
            runtime_inventory:
              inventory_ttl_days: ${ANCHORE_ENTERPRISE_RUNTIME_INVENTORY_TTL_DAYS}
              inventory_ingest_overwrite: ${ANCHORE_ENTERPRISE_RUNTIME_INVENTORY_INGEST_OVERWRITE}
            integrations:
              integration_health_report_ttl_days: ${ANCHORE_ENTERPRISE_INTEGRATION_HEALTH_REPORTS_TTL_DAYS}
            image_gc:
              max_worker_threads: ${ANCHORE_CATALOG_IMAGE_GC_WORKERS}
            runtime_compliance:
              object_store_bucket: "runtime_compliance_check"
            import_operation_expiration_days: ${ANCHORE_IMPORT_OPERATION_EXPIRATION_DAYS}
            analysis_queue_priority: <ALLOW_API_CONFIGURATION>
            sbom_vuln_scan:
              auto_scale: true
              batch_size: 1
              pool_size: 1
            analysis_archive:
              compression:
                enabled: true
                min_size_kbytes: 100
              enabled: true
              storage_driver:
                config:
                  access_key: itsa
                  bucket: analysisarchive
                  region: null
                  secret_key: test
                  url: http://myminio.mynamespace.svc.cluster.local:9000
                name: s3
            object_store:
              compression:
                enabled: true
                min_size_kbytes: 100
              storage_driver:
                config: {}
                name: db
              verify_content_digests: true
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          simplequeue:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          policy_engine:
            enabled: true
            require_auth: true
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            policy_evaluation_cache_ttl: ${ANCHORE_POLICY_EVAL_CACHE_TTL_SECONDS}
            enable_package_db_load: ${ANCHORE_POLICY_ENGINE_ENABLE_PACKAGE_DB_LOAD}
            enable_user_base_image: true
            vulnerabilities:
              sync:
                enabled: true
                ssl_verify: ${ANCHORE_FEEDS_SSL_VERIFY}
                connection_timeout_seconds: 3
                read_timeout_seconds: 60
                data:
                  grypedb:
                    enabled: true
              matching:
                exclude:
                  providers: []
                  package_types: []
                default:
                  search:
                    by_cpe:
                      enabled: ${ANCHORE_VULN_MATCHING_DEFAULT_SEARCH_BY_CPE_ENABLED}
                ecosystem_specific:
                  dotnet:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_DOTNET_SEARCH_BY_CPE_ENABLED}
                  golang:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_GOLANG_SEARCH_BY_CPE_ENABLED}
                  java:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_JAVA_SEARCH_BY_CPE_ENABLED}
                  javascript:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_JAVASCRIPT_SEARCH_BY_CPE_ENABLED}
                  python:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_PYTHON_SEARCH_BY_CPE_ENABLED}
                  ruby:
                    search:
                      by_cpe:
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_RUBY_SEARCH_BY_CPE_ENABLED}
                  stock:
                    search:
                      by_cpe:
                        # Disabling search by CPE for the stock matcher will entirely disable binary-only matches and is not advised
                        enabled: ${ANCHORE_VULN_MATCHING_ECOSYSTEM_SPECIFIC_STOCK_SEARCH_BY_CPE_ENABLED}
            server: {}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          reports:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            enable_graphiql: ${ANCHORE_ENTERPRISE_REPORTS_ENABLE_GRAPHIQL}
            cycle_timers:
              reports_scheduled_queries: 600
            max_async_execution_threads: ${ANCHORE_ENTERPRISE_REPORTS_MAX_ASYNC_EXECUTION_THREADS}
            async_execution_timeout: ${ANCHORE_ENTERPRISE_REPORTS_ASYNC_EXECUTION_TIMEOUT}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}
            use_volume: false

          reports_worker:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            enable_data_ingress: ${ANCHORE_ENTERPRISE_REPORTS_ENABLE_DATA_INGRESS}
            enable_data_egress: ${ANCHORE_ENTERPRISE_REPORTS_ENABLE_DATA_EGRESS}
            data_egress_window: ${ANCHORE_ENTERPRISE_REPORTS_DATA_EGRESS_WINDOW}
            data_refresh_max_workers: ${ANCHORE_ENTERPRISE_REPORTS_DATA_REFRESH_MAX_WORKERS}
            data_load_max_workers: ${ANCHORE_ENTERPRISE_REPORTS_DATA_LOAD_MAX_WORKERS}
            ingress_images_max_workers: 10
            cycle_timers:
              reports_extended_runtime_vuln_load: 1800
              reports_image_egress: 600
              reports_image_load: 600
              reports_image_refresh: 7200
              reports_metrics: 3600
              reports_runtime_inventory_load: 600
              reports_tag_egress: 600
              reports_tag_load: 600
              reports_tag_refresh: 7200
            runtime_report_generation:
              use_legacy_loaders_and_queries: false
              inventory_images_by_vulnerability: true
              vulnerabilities_by_k8s_namespace: ${ANCHORE_ENTERPRISE_REPORTS_VULNERABILITIES_BY_K8S_NAMESPACE}
              vulnerabilities_by_k8s_container: ${ANCHORE_ENTERPRISE_REPORTS_VULNERABILITIES_BY_K8S_CONTAINER}
              vulnerabilities_by_ecs_container: ${ANCHORE_ENTERPRISE_REPORTS_VULNERABILITIES_BY_ECS_CONTAINER}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          notifications:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: '0.0.0.0'
            port: ${ANCHORE_PORT}
            max_request_threads: ${ANCHORE_MAX_REQUEST_THREADS}
            cycle_timers:
              notifications: 30
            ui_url: ${ANCHORE_ENTERPRISE_UI_URL}
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}

          data_syncer:
            enabled: true
            require_auth: true
            endpoint_hostname: ${ANCHORE_ENDPOINT_HOSTNAME}
            listen: 0.0.0.0
            port: ${ANCHORE_PORT}
            auto_sync_enabled: ${ANCHORE_DATA_SYNC_AUTO_SYNC_ENABLED}
            upload_dir: /analysis_scratch
            datasets:
              vulnerability_db:
                versions: ["5"]
              clamav_db:
                versions: ["1"]
              kev_db:
                versions: ["1"]
            ssl_enable: ${ANCHORE_SSL_ENABLED}
            ssl_cert: ${ANCHORE_SSL_CERT}
            ssl_key: ${ANCHORE_SSL_KEY}
    kind: ConfigMap
    metadata:
      annotations:
        bar: baz
        foo: bar
        helm.sh/hook: pre-upgrade
        helm.sh/hook-weight: "0"
      labels:
        app.kubernetes.io/instance: test-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-release-enterprise
        app.kubernetes.io/part-of: anchore
        app.kubernetes.io/version: 9.9.9
        bar: baz
        foo: bar
        helm.sh/chart: enterprise-9.9.9
      name: test-release-enterprise-999-osaa-migration-job
      namespace: test-namespace
