{{- if not .Values.useExistingSecrets -}}
{{- /*
  If release is being upgraded, don't recreate the defaultAdminPassword or samlSecret, instead get it from the corresponding existing
  secret.
*/ -}}
{{- $anchoreAdminPass := (include "enterprise.defaultAdminPassword" . | quote) -}}
{{- $anchoreSamlSecret := (include "enterprise.samlSecret" . | quote) -}}
{{- if .Release.IsUpgrade -}}
  {{- $anchoreSecret := (lookup "v1" "Secret" .Release.Namespace (include "enterprise.fullname" .)) -}}
  {{- if $anchoreSecret -}}
    {{- $anchoreAdminPass = (index $anchoreSecret.data "ANCHORE_ADMIN_PASSWORD" | b64dec) | quote -}}
    {{- $anchoreSamlSecret = (index $anchoreSecret.data "ANCHORE_SAML_SECRET" | b64dec) | quote -}}
  {{- end -}}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ template "enterprise.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "enterprise.common.labels" . | nindent 4 }}
  annotations: {{- include "enterprise.common.annotations" . | nindent 4 }}
type: Opaque
stringData:
  ANCHORE_ADMIN_PASSWORD: {{ $anchoreAdminPass }}
  ANCHORECTL_PASSWORD: {{ $anchoreAdminPass }}
  ANCHORE_DB_HOST: {{ include "enterprise.dbHostname" .  | quote }}
  ANCHORE_DB_NAME: {{ index .Values "postgresql" "auth" "database" | quote }}
  ANCHORE_DB_USER: {{ index .Values "postgresql" "auth" "username" | quote }}
  ANCHORE_DB_PASSWORD: {{ index .Values "postgresql" "auth" "password" | quote }}
  ANCHORE_DB_PORT: {{ index .Values "postgresql" "primary" "service" "ports" "postgresql" | quote }}
  ANCHORE_SAML_SECRET: {{ $anchoreSamlSecret }}

{{- end -}}
