{{- template "checkUpgradeForExistingSecret" . }}
{{- if not .Values.anchoreGlobal.useExistingSecrets }}

{{- $anchoreAdminPass := (include "anchore-engine.defaultAdminPassword" . | quote) }}

{{- /*
  If release is being upgraded, don't recreate the defaultAdminPassword, instead get it from the corresponding existing
  secret. For users upgrading to chart v1.12.5 or higher, use the new admin-password secret, otherwise use the old
  engine secret.
*/ -}}
{{- if and .Release.IsUpgrade (not .Values.anchoreGlobal.defaultAdminPassword) }}
{{- $adminPassSecret := (lookup "v1" "Secret" .Release.Namespace (print (include "anchore-engine.fullname" .) "-admin-pass")) }}
{{- $engineSecret := (lookup "v1" "Secret" .Release.Namespace (include "anchore-engine.fullname" . )) -}}
{{- if or $engineSecret $adminPassSecret }}
{{- $secret := (default $engineSecret $adminPassSecret) }}
{{- $anchoreAdminPass = (index $secret.data "ANCHORE_ADMIN_PASSWORD" | b64dec) }}
{{- end }}
{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ template "anchore-engine.fullname" . }}-admin-pass
  labels:
    app: {{ template "anchore-engine.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- with .Values.anchoreGlobal.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  ANCHORE_ADMIN_PASSWORD: {{ $anchoreAdminPass }}
{{- end }}
