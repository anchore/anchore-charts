{{- if and .Values.feedsUpgradeJob.enabled .Values.feedsUpgradeJob.usePostUpgradeHook -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "feeds.upgradeJob.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "feeds.common.labels" . | nindent 4 }}
  annotations: {{- include "feeds.common.annotations" (merge (dict "nil" true) .) | nindent 4 }}
  {{- if not .Values.feedsUpgradeJob.force }}
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "0"
  {{- end }}
spec:
  template:
    metadata:
      name: {{ template "feeds.upgradeJob.fullname" . }}
      labels: {{- include "feeds.common.labels" . | nindent 8 }}
      annotations: {{- include "feeds.common.annotations" . | nindent 8 }}
    spec:
    {{- with .Values.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
    {{- end }}

    {{- if .Values.feedsUpgradeJob.serviceAccountName }}
      {{- with .Values.feedsUpgradeJob.serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
    {{- else if .Values.serviceAccountName }}
      {{- with .Values.serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
    {{- end }}

    {{- with .Values.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ . }}
    {{- end }}
      restartPolicy: Never
    {{- with .Values.feedsUpgradeJob.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.feedsUpgradeJob.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.feedsUpgradeJob.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if or .Values.certStoreSecretName .Values.cloudsql.useExistingServiceAcc .Values.extraVolumes }}
      volumes:
      {{- with .Values.certStoreSecretName }}
        - name: certs
          secret:
            secretName: {{ . }}
      {{- end }}
      {{- if .Values.cloudsql.useExistingServiceAcc }}
        - name: {{ .Values.cloudsql.serviceAccSecretName }}
          secret:
            secretName: {{ .Values.cloudsql.serviceAccSecretName }}
      {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      containers:
      {{- if .Values.cloudsql.enabled  }}
        {{- include "feeds.common.cloudsqlContainer" . | nindent 8 }}
      {{- end }}
        - name: feeds-upgrade
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- with .Values.containerSecurityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
        {{- end }}
          command: ["/bin/bash", "-c"]
          args:
          {{- if not .Values.anchoreConfig.database.ssl }}
            - |
              {{ print (include "feeds.doSourceFile" .) }} anchore-enterprise-manager db --db-connect postgresql://"${ANCHORE_FEEDS_DB_USER}":"${ANCHORE_FEEDS_DB_PASSWORD}"@"${ANCHORE_FEEDS_DB_HOST}":"${ANCHORE_FEEDS_DB_PORT}"/"${ANCHORE_FEEDS_DB_NAME}" upgrade --dontask;
          {{- else if eq .Values.anchoreConfig.database.sslMode "require" }}
            - |
              {{ print (include "feeds.doSourceFile" .) }} anchore-enterprise-manager db --db-use-ssl --db-connect postgresql://"${ANCHORE_FEEDS_DB_USER}":"${ANCHORE_FEEDS_DB_PASSWORD}"@"${ANCHORE_FEEDS_DB_HOST}":"${ANCHORE_FEEDS_DB_PORT}"/"${ANCHORE_FEEDS_DB_NAME}"?sslmode={{- .Values.anchoreConfig.database.sslMode }} upgrade --dontask;
          {{- else }}
            - |
              {{ print (include "feeds.doSourceFile" .) }} anchore-enterprise-manager db --db-use-ssl --db-connect postgresql://"${ANCHORE_FEEDS_DB_USER}":"${ANCHORE_FEEDS_DB_PASSWORD}"@"${ANCHORE_FEEDS_DB_HOST}":"${ANCHORE_FEEDS_DB_PORT}"/"${ANCHORE_FEEDS_DB_NAME}"?sslmode={{- .Values.anchoreConfig.database.sslMode -}}\&sslrootcert=/home/anchore/certs/{{- .Values.anchoreConfig.database.sslRootCertFileName }} upgrade --dontask;
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-feeds-config-env-vars
          {{- if not .Values.standalone }}
            - configMapRef:
                name: {{ .Release.Name }}-enterprise-config-env-vars
          {{- end }}
        {{- if not .Values.injectSecretsViaEnv }}
          {{- if .Values.useExistingSecrets }}
            - secretRef:
                name: {{ .Values.existingSecretName }}
          {{- else }}
            - secretRef:
                name: {{ template "feeds.fullname" . }}
          {{- end }}
        {{- end }}
          env: {{- include "feeds.common.environment" . | nindent 12 }}
          volumeMounts:
          {{- if (.Values.certStoreSecretName) }}
            - name: certs
              mountPath: /home/anchore/certs/
              readOnly: true
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.feedsUpgradeJob.resources }}
          resources: {{- toYaml . | nindent 12 }}
        {{- end }}
{{- end -}}
